{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_service/data.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/main-page/main-page.component.html","webpack:///./src/app/main-page/main-page.component.scss","webpack:///./src/app/main-page/main-page.component.ts","webpack:///./src/app/shared/endpoints.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ServerResponse } from '../shared/_model/system/server-response.model';\nimport { Group } from '../shared/_model/group';\nimport { DATA_FILE_URL } from '../shared/endpoints';\n\n@Injectable()\nexport class DataService {\n  constructor(private _http: HttpClient) {\n  }\n\n  public getData(): Observable<Group[]> {\n    return this._http.get(DATA_FILE_URL)\n      .pipe(map(response => (response as ServerResponse<Group>).payload));\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title = 'Course Works List';\n\n  constructor(private _titleService: Title) {\n    this._titleService.setTitle(this.title);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { rootRoutes } from './app.routes';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatIconModule,\n  MatListModule,\n  MatSidenavModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { DataService } from './_service/data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    rootRoutes\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { MainPageComponent } from './main-page/main-page.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: MainPageComponent,\n  }\n];\n\nexport const rootRoutes = RouterModule.forRoot(appRoutes);\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\" fullscreen>\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"isHandset ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset | async)!.matches ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset | async)!.matches\\\">\\n    <mat-toolbar color=\\\"primary\\\">Групи</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item *ngFor=\\\"let group of groups\\\" ngClass=\\\"{{ currentGroup === group ? 'active' : false }}\\\"\\n         (click)=\\\"chooseGroup(group)\\\">{{ group.name }}</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"(isHandset | async)!.matches\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>{{ _titleService.getTitle() }}</span>\\n    </mat-toolbar>\\n\\n    <div class=\\\"card-container\\\" *ngIf=\\\"currentGroup\\\">\\n      <mat-card *ngFor=\\\"let student of currentGroup.students\\\">\\n        <mat-card-title>\\n          {{ student.name }}\\n        </mat-card-title>\\n        <mat-card-content>\\n          <a mat-raised-button href=\\\"{{ student.link }}\\\">\\n            ПЕРЕГЛЯНУТИ <mat-icon>arrow_forward</mat-icon>\\n          </a>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \".sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); }\\n\\n.mat-list-item {\\n  transition: border-width 0.1s ease-in-out; }\\n\\n.mat-list-item.active {\\n  border-right: 4px solid #9f9f9f;\\n  background-color: rgba(0, 0, 0, 0.03); }\\n\\n#refreshButton {\\n  margin: 16px 0 0 16px; }\\n\\nmat-card {\\n  min-width: 256px;\\n  box-sizing: border-box;\\n  margin: 16px; }\\n\\nmat-card.tobacco {\\n  min-width: 192px; }\\n\\n.card-container {\\n  display: flex;\\n  flex-flow: row wrap; }\\n\\n.fill-remaining-space {\\n  flex: 1 1 auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { DataService } from '../_service/data.service';\nimport { Group } from '../shared/_model/group';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n  private groups: Group[];\n  private currentGroup: Group;\n\n  constructor(private breakpointObserver: BreakpointObserver,\n              private _titleService: Title,\n              private _dataService: DataService) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  private loadData(): void {\n    console.log('test');\n    this._dataService.getData()\n      .subscribe(data => {\n        this.groups = data;\n\n        this.groups.sort(((a, b) => a.name > b.name ? 1 : -1));\n        this.groups.forEach(g => {\n          g.students.sort(((a, b) => a.name > b.name ? 1 : -1));\n        });\n\n        if (this.groups.length) {\n          this.currentGroup = this.groups[0];\n        }\n      });\n  }\n\n  private chooseGroup(group: Group): void {\n    this.currentGroup = group;\n  }\n}\n","export const DATA_FILE_URL = 'https://course.shrralis.com/data.json';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}